var documenterSearchIndex = {"docs":
[{"location":"readme/#Resource-patch-model","page":"Home","title":"Resource patch model","text":"","category":"section"},{"location":"readme/","page":"Home","title":"Home","text":"This model builds on our previous project, which simulates microbial community dynamics based solely on their metabolic interactions. The model presented here aims to create a more pronounced picture of what happens in the human gut by making a distinction in the underlying chemical reaction system between different type of resource molecules (monomers, simple- and complex resources) using more realistic rules for resource supply (compared to the previous chemostat-like approach), where resources are assumed to appear periodically and in distinct patches due to the feeding of the host. The microbes aggregating on the surface of these patches are modeled as local communities with distinct supply vectors representing the composition of the food particle.","category":"page"},{"location":"readme/","page":"Home","title":"Home","text":"Moreover, we distinguish a mucus community, motivated by the fact that the mucus operates very differently from the ephemeral resource patches of the lumen: The mucus resource is less energy-rich than other complex resources, but it provides a steady supply. Therefore, the mucus can serve as a refuge in times of starvation. We think it is more realistic, to have the mucus resource be made out of different building blocks than the rest of the complex resources, but a switch parameter of the model (mucus_disjunct) allows for either option.","category":"page"},{"location":"readme/","page":"Home","title":"Home","text":"Local communities, including the mucus, follow the same dynamics: species can consume resources, and for each resource consumed, some amount of its monomer content contributes to population growth, while the rest contributes to byproduct formation. Byproducts are released into a shared environment, where they are available for consumption by other species. Local communities are connected by diffusion, and (optionally) advection.","category":"page"},{"location":"readme/","page":"Home","title":"Home","text":"This model is one of succession: we periodically introduce invaders a pre-defined number of times, which can appear in either local community. When invasions are fast, the system is in a constant transient state, therefore we need some additional time to see the equilibrium state community after invasion events stop. Several measures and plots are calculated form the generated time-series data, see the Manual for details.","category":"page"},{"location":"readme/#Acknowledgements","page":"Home","title":"Acknowledgements","text":"","category":"section"},{"location":"readme/","page":"Home","title":"Home","text":"While I was the only person working on this code, the model that was implemented mostly consists of the ideas of other researchers. I would like to thank them sincerely for their contributions:","category":"page"},{"location":"readme/","page":"Home","title":"Home","text":"Matti Ruuskanen particularly, for proposing the idea of ephemeral resource patches in the gut.\nIstván Scheuring, Gergely Boza and Leo Lahti for sharing their valuable knowledge about different factors affecting microbial community structure and metabolism in the gut, along with their ideas about how to represent them in the model.","category":"page"},{"location":"readme/#Funding","page":"Home","title":"Funding","text":"","category":"section"},{"location":"readme/","page":"Home","title":"Home","text":"This project received funding from the European Union’s Horizon 2020 research and innovation programme (under grant agreement 952914; FindingPheno).","category":"page"},{"location":"readme/#Contact-me","page":"Home","title":"Contact me","text":"","category":"section"},{"location":"readme/","page":"Home","title":"Home","text":"For inquiries and bug reports, contact Jakab Máté: mate.jakab@ecolres.hu","category":"page"},{"location":"example2/#Invastingate-wether-the-order-of-introduction-of-invaders-can-result-in-different-equilibrium-states-at-the-end-of-the-simulation,-by-fixing-all-other-stochastic-effects.","page":"Order of introductions","title":"Invastingate wether the order of introduction of invaders can result in different equilibrium states at the end of the simulation, by fixing all other stochastic effects.","text":"","category":"section"},{"location":"example2/","page":"Order of introductions","title":"Order of introductions","text":"repeat_params(10, \"path/to/your/destination\",\n    fix_metab=true,\n    fix_pool=true,\n    fix_sample=true,\n    fix_callbacks=true,\n    fix_order=false)","category":"page"},{"location":"example1/#Run-10-repeats-with-the-default-parameter-settings","page":"Default parameters","title":"Run 10 repeats with the default parameter settings","text":"","category":"section"},{"location":"example1/","page":"Default parameters","title":"Default parameters","text":"repeat_params(10, \"path/to/your/destination\")","category":"page"},{"location":"","page":"Manual","title":"Manual","text":"To run simulations, we resort to a single function with a wide variety of parameters. ","category":"page"},{"location":"#Patches.repeat_params","page":"Manual","title":"Patches.repeat_params","text":"MANDATORY ARGUMENTS\n\nn_repeats::Int64: Number of repetitions for the simulation.\nbasepath::String: Path to the directory where the results will be saved.\n\nOPTIONAL ARGUMENTS Resource parameters:\n\nn_complex::Int64: Number of complex resources. Default is 3.\nn_simple::Int64: Number of simple resources. Default is 10.\nn_monomer::Int64: Number of monomer resources. Default is 5.\ngapsize::Int64: Size of the gap between complex and simple resources. Default is 15.\n\nResource supply parameters:\n\ninflux_amount::Float64: Amount of resource influx. Default is 0.0.\ninflux_time::Float64: Time between resource influxes. Default is 1.0.\nalpha_high::Float64: Controls constant resource supply if mucus=false. Each local community receives a continuous supply 100 units of complex resource, of which alpha_high amount is dedicated to a single complex resource. The remainder is split evenly between other complex resources. Default is 100.0.\n\nSpecies parameters:\n\nn_invaders::Int64: Number of invading species. Default is 100.\nt_inv::Float64: Time between the introduction of invading species. Default is 1.0.\nn_species::Int64: Number of species initially in the habitat. Default is 1.\npool_size::Int64: Size of the species pool. Default is 500.\ntradeoff_strength__number_consumed::Float64: Trade-off strength for the number of resources consumed. Default is 0.1.\ntradeoff_strength__numberofsplits::Float64: Trade-off strength for the \"complexity\" of a species' reaction repertoire, based on the number of enzymatic cuts they perform. Default is 0.1.\nh::Float64: Reaction rate allocation tradeoff. The h-th power of reaction rates in a species always sums to one. Default is 1.0.\ngen_n_consumed::Int64: Number of resources consumed by generalist species. Default is 4.\nspec_n_consumed::Int64: Number of resources consumed by specialist species. Default is 1.\nconsume_all_monomers::Bool: Whether every species is able to consume all monomers. Default is false.\n\nMucus parameters:\n\nmucus::Bool: Whether to include mucus in the simulation, where resource supply is constant. Default is true.\nmucus_disjunct::Bool: Whether the mucus resource is disjunct from the rest of the primary resources (there is no overlap in their byproducts). Default is true.\nmucus_simple::Int64: Only used if mucus_disjunt=true Number of simple resources in the mucus resource breakdown pathways. Default is 5.\nmucus_mono::Int64: Only used if mucus_disjunt=true Number of monomer resources in the mucus resource breakdown pathways. Default is 4.\nmucus_gap::Int64: Only used if mucus_disjunt=true Size of the gap between mucus and simple mucus-specific resources. Default is 10.\n\nSimulation parameters:\n\nncomms::Int64: Number of communities in the simulation. Default is 3.\nt_span::Tuple{Float64, Float64}: Time span of the simulation. Default is (0, 150).\ncutoff::Float64: Species under cutoff are considered extinct. Default is 0.0001.\nsymmetrical::Bool: Whether diffusion is symmetrical or directional across communities. Default is true.\nlimited_pathways::Bool: Whether to limit the underlying metabolic reaction system by excluding ~half of the energetically possible byproducts of resources. Default is true.\n\nStochasticity parameters:\n\nset_seeds::Union{Nothing, Vector{Int64}}: If provided, seeds for each repeat. Default is nothing.\nfix_metab::Bool: Whether to use the same metabolism for all repeats. Default is false.\nfix_pool::Bool: Whether to use the same species pool for all repeats. Default is false.\nfix_sample::Bool: Whether to use the same sample for all repeats. Default is false.\nfix_callbacks::Bool: Whether to use the same callbacks for all repeats. Default is false.\nfix_order::Bool: Whether to fix the order of invading species. Default is false.\n\n\n\n\n\n","category":"function"},{"location":"","page":"Manual","title":"Manual","text":"Each simulation will have its own subfolder in the specified output folder, where the following things are saved:","category":"page"},{"location":"","page":"Manual","title":"Manual","text":"params: Parameters of the simulation\nbeta_diversity plot: A measure of how different the composition of local communities are\nshannon_diversity plot: A measure of the diversity of all populations of the simulation pooled together\nMCI plot: Metabolic Capacity Index of the of the system. Tracks the total number of different reactions by taking all of the species stoichiometric matrices and adding 1 for each position where at least 1 species has a non-zero entry\nconsumer_types plot: Tracks the total number of primary consumer (generalist) and secondary consumer (specialist) species across the system\nspecies_counts plot: Tracks the total number of different species across the system\ncomm_totals plot: Tracks the total abundance of members for each local community\ncommunity graph plots: A separate graph for each local community, depicting the active pathways. Species nodes are blue, resource nodes are green. Red arrows indicate consumption, green arrows indicate production. Arrow widths are weighted according to the pathway fluxes.","category":"page"},{"location":"","page":"Manual","title":"Manual","text":"Outside of the individual run folders, we will find the following outputs:","category":"page"},{"location":"","page":"Manual","title":"Manual","text":"Aggregated versions of the Beta diversity, Shannon diversity, Species counts, MCI, Consumer types and Community totals figures. Standard deviation is shown in all but the last two figures of the above list. \nTr_rel_something plots correspond to the same measures, but they take an average of these measures around the end of the transient (tr) and at the end of the relaxation (rel) period for each simulation. The mean and standard deviation are shown.\nJLD2 format files are used to store the data needed for generating all of the above plots.","category":"page"}]
}
